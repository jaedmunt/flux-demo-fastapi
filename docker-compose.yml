 
version: "3.9"

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    ports: [ "2181:2181" ]

  kafka:
    image: bitnami/kafka:3.7
    depends_on: [ zookeeper ]
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports: [ "9092:9092" ]

  weaviate:
    image: semitechnologies/weaviate:1.27.6
    ports: [ "8080:8080" ]
    environment:
      ENABLE_MODULES: text2vec-openai,reranker-jinaai        # ➈
      JINAAI_APIKEY: ${JINAAI_APIKEY}
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      QUERY_DEFAULTS_LIMIT: 25
      PERSISTENCE_DATA_PATH: /var/lib/weaviate
      CLUSTER_HOSTNAME: node1
    volumes: [ "weaviate_data:/var/lib/weaviate" ]

  producer:
    build: ./producer
    depends_on: [ kafka ]
    env_file: .env

  consumer:
    build: ./consumer
    depends_on: [ kafka, weaviate ]
    env_file: .env
    volumes:
      - ./models:/models                   # put your Word2Vec bin here

  airflow:
  build: ./airflow          # ⬅︎ replaces `image: apache/airflow:…`
  env_file: .env
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./feeds.txt:/opt/airflow/feeds.txt:ro   
  ports: ["8088:8080"]
  command: >
    bash -c "airflow db upgrade &&
             airflow users create --username admin --firstname a --lastname d \
                                   --role Admin --password admin --email admin@example.com &&
             airflow webserver & airflow scheduler"
  depends_on: [kafka]

  api:
    build: ./search_api
    depends_on: [ weaviate ]
    env_file: .env
    ports: [ "8000:8000" ]                 # FastAPI → http://localhost:8000

volumes:
  weaviate_data:
